class_file(imports, classDef) ::= <<
<if(classDef.packageName)>package <classDef.packageName>;<endif>

<imports:{ im | import <im>;}; separator="\n">

<if(classDef.accessModifier)><classDef.accessModifier> <endif><if(classDef.abstract)>abstract <endif>class <classDef.name><if(classDef.superClass)> extends <classDef.superClass.name><endif><if(classDef.interfaces)> implements <classDef.interfaces:{iface | <iface.name>};separator=", "><endif>{
    <classDef.attributes:attribute()>

    <classDef.concreteMethods:concrete_method()>
}
>>

attribute(attrDef) ::= <<

<if(attrDef.accessModifier)><attrDef.accessModifier> <endif><attrDef.type.name> <attrDef.name>;
>>

concrete_method(methodDef) ::= <<

<if(methodDef.accessModifier)><methodDef.accessModifier> <endif><if(methodDef.static)>static <endif><if(methodDef.returnType)><methodDef.returnType.name><else>void<endif> <methodDef.name>(<methodDef.parameters:{p | <p.type.name> <p.name>};separator=", ">){
    <if(methodDef.body)><methodDef.body>;<endif>
    <if(methodDef.returnType)>return <if(methodDef.returnValue)><methodDef.returnValue><else>null<endif>;<endif>
}


>>